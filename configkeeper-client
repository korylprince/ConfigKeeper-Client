#!/usr/bin/python

import ConfigParser
import os
import sys
import syslog
import urllib
import urllib2
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler 
import time

class fileWatcher(FileSystemEventHandler):
    """subclass to upload files"""

    def on_any_event(self, event): 
        if event.src_path not in files:
            return 0
        logger('Change detected for '+event.src_path)
        getFile(event.src_path)

class dirWatcher(FileSystemEventHandler):
    """subclass to upload files"""

    def on_any_event(self, event): 
        logger('Change detected for '+event.src_path)
        getFile(event.src_path)

def logger(message,logtype=syslog.LOG_INFO):
    """
    Simple logger
    """
    syslog.syslog(logtype,message)
    print message

def readConfig(fileLocation):
    """
    Reads config at argument location
    """
    config = ConfigParser.ConfigParser()
    if config.read(fileLocation) == []:
        logger('ERROR: Cannot read config file.',syslog.LOG_ERR)
        quit()
    return config

def getFile(location):
    """
    gets file, or all files in a directory
    """
    if not os.path.exists(location):
        logger('Error: '+location+' does not exist.',syslog.LOG_ERR)
        return 0 
    if os.path.isdir(location):
        for f in os.listdir(location):
            getFile(location+'/'+f)
    else:
        sendFile(location)

def sendFile(location):
    """
    post to web api
    """
    # get text
    f = open(location,'r')
    text = f.read()
    f.close()
    # send request
    values = {'file_name':location,'server_name':server,'file':text,'update_key':update_key}
    try:
        data = urllib.urlencode(values)
        req = urllib2.Request(url, data)
        response = urllib2.urlopen(req).read()
    except urllib2.HTTPError,msg:
        logger(str(msg),syslog.LOG_ERR)
        return 0
    # make sure api returns correctly
    if response != 'ok\n':
        logger('ERROR: File input error: '+location,syslog.LOG_ERR)
        quit()
    logger('Sent '+location+' successfully.')

if __name__ == '__main__':
    # make sure file was specified
    if len(sys.argv) < 2:
        print "Run like config.py /path/to/config/file"
        quit()
    config = readConfig(sys.argv[1])

    logger('ConfigKeeper Client started')

    # get settings
    try:
        url = config.get('settings','url')
        server = config.get('settings','server')
        update_key = config.get('settings','key')
        files = config.get('settings','files').split(',')
    except ConfigParser.NoOptionError,msg:
        logger('ERROR: {0} not given in {1} section.'.format(msg.option,msg.section),syslog.LOG_ERR)

    # go through list once on startup
    for f in files:
        getFile(f)
    
    # add watcher for each file/directory 
    fileObserver = Observer()
    dirObserver = Observer()
    for f in files:
        if os.path.isdir(f):
            dirObserver.schedule(dirWatcher(),path=f,recursive=True)
        else:
            parent = os.path.split(f)[0]
            fileObserver.schedule(fileWatcher(),path=parent,recursive=False)
    fileObserver.start()
    dirObserver.start()
    # loop forever
    while True:
        time.sleep(1)
